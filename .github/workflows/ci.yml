name: CI

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  issues: write

jobs:
  build:
    name: 'Build and Push'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'yarn'
    - run: yarn
    - run: yarn run test
    
    - name: Semantic release
      uses: cycjimmy/semantic-release-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Generate tag
      id: generate_tag 
      run: |
        SHA=$(echo $GITHUB_SHA | head -c7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.ECR_ROLE }}
        aws-region: us-east-2
  
    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Build
      id: build-docker-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        TAG: ${{ steps.generate_tag.outputs.sha }}
      run: |
        docker build -t $REGISTRY/natanaelvich-ci:$TAG .
        docker tag $REGISTRY/natanaelvich-ci:$TAG $REGISTRY/natanaelvich-ci:latest
        docker push --all-tags $REGISTRY/natanaelvich-ci:latest
        IMAGE=$(echo $REGISTRY/natanaelvich-ci:$TAG)
        echo "image=$IMAGE" >> $GITHUB_OUTPUT
    
    - name: Deploy to app runner
      id: deploy-app-runner
      uses: awslabs/amazon-app-runner-deploy@main
      with:
          service: natanaelvich-api
          image: ${{ steps.build-docker-image.outputs.image }}
          access-role-arn: ${{ secrets.APP_RUNNER_ROLE }}
          region: us-east-2
          cpu: 1
          memory: 2
          port: 3000
          wait-for-service-stability-seconds: 180
   
    - name: App Runner check
      run: echo "App Runner running... ${{ steps.deploy-app-runner.outputs.service-url }}"
